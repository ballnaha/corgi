import { OrderStatus } from "@prisma/client";

// р╕кр╕Цр╕▓р╕Щр╕░р╕Вр╕нр╕Зр╕Др╕│р╕кр╕▒р╣Ир╕Зр╕Лр╕╖р╣Йр╕нр╕Юр╕гр╣Йр╕нр╕бр╕Др╕│р╕нр╕Шр╕┤р╕Ър╕▓р╕в
export const ORDER_STATUS_INFO = {
  PENDING: {
    label: "р╕гр╕нр╕Бр╕▓р╕гр╕вр╕╖р╕Щр╕вр╕▒р╕Щ",
    description: "р╕Др╕│р╕кр╕▒р╣Ир╕Зр╕Лр╕╖р╣Йр╕нр╕Цр╕╣р╕Бр╕кр╕гр╣Йр╕▓р╕Зр╣Бр╕ер╣Йр╕з р╕гр╕нр╕Бр╕▓р╕гр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Ир╕▓р╕Бр╕гр╣Йр╕▓р╕Щр╕Др╣Йр╕▓",
    color: "#FF9800",
    icon: "тП│",
    priority: 1
  },
  CONFIRMED: {
    label: "р╕вр╕╖р╕Щр╕вр╕▒р╕Щр╣Бр╕ер╣Йр╕з",
    description: "р╕гр╣Йр╕▓р╕Щр╕Др╣Йр╕▓р╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Др╕│р╕кр╕▒р╣Ир╕Зр╕Лр╕╖р╣Йр╕нр╣Бр╕ер╣Йр╕з",
    color: "#2196F3",
    icon: "тЬЕ",
    priority: 2
  },
  PAYMENT_PENDING: {
    label: "р╕гр╕нр╕Бр╕▓р╕гр╕Кр╕│р╕гр╕░р╣Ар╕Зр╕┤р╕Щ",
    description: "р╕гр╕нр╕Бр╕▓р╕гр╕Кр╕│р╕гр╕░р╣Ар╕Зр╕┤р╕Щр╕кр╣Ир╕зр╕Щр╕Чр╕╡р╣Ир╣Ар╕лр╕ер╕╖р╕н (р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕гр╕Ур╕╡р╕бр╕▒р╕Фр╕Ир╕│)",
    color: "#F44336",
    icon: "ЁЯТ│",
    priority: 3
  },
  PAID: {
    label: "р╕Кр╕│р╕гр╕░р╣Ар╕Зр╕┤р╕Щр╣Бр╕ер╣Йр╕з",
    description: "р╕Кр╕│р╕гр╕░р╣Ар╕Зр╕┤р╕Щр╕Др╕гр╕Ър╕Цр╣Йр╕зр╕Щр╣Бр╕ер╣Йр╕з",
    color: "#4CAF50",
    icon: "ЁЯТ░",
    priority: 4
  },
  PREPARING: {
    label: "р╕Бр╕│р╕ер╕▒р╕Зр╣Ар╕Хр╕гр╕╡р╕вр╕бр╕кр╕┤р╕Щр╕Др╣Йр╕▓",
    description: "р╕Бр╕│р╕ер╕▒р╕Зр╣Ар╕Хр╕гр╕╡р╕вр╕бр╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕лр╕гр╕╖р╕нр╕кр╕▒р╕Хр╕зр╣Мр╣Ар╕ер╕╡р╣Йр╕вр╕Зр╕кр╕│р╕лр╕гр╕▒р╕Ър╕кр╣Ир╕Зр╕бр╕нр╕Ъ",
    color: "#9C27B0",
    icon: "ЁЯУж",
    priority: 5
  },
  READY_FOR_PICKUP: {
    label: "р╕Юр╕гр╣Йр╕нр╕бр╕гр╕▒р╕Ър╕кр╕┤р╕Щр╕Др╣Йр╕▓",
    description: "р╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕Юр╕гр╣Йр╕нр╕бр╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╕гр╕▒р╕Ър╕Фр╣Йр╕зр╕вр╕Хр╕▒р╕зр╣Ар╕нр╕З",
    color: "#00BCD4",
    icon: "ЁЯПк",
    priority: 6
  },
  SHIPPED: {
    label: "р╕Ир╕▒р╕Фр╕кр╣Ир╕Зр╣Бр╕ер╣Йр╕з",
    description: "р╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕Цр╕╣р╕Бр╕Ир╕▒р╕Фр╕кр╣Ир╕Зр╣Бр╕ер╣Йр╕з",
    color: "#607D8B",
    icon: "ЁЯЪЪ",
    priority: 7
  },
  OUT_FOR_DELIVERY: {
    label: "р╕Бр╕│р╕ер╕▒р╕Зр╕кр╣Ир╕Зр╕бр╕нр╕Ъ",
    description: "р╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕Бр╕│р╕ер╕▒р╕Зр╕нр╕вр╕╣р╣Ир╣Гр╕Щр╕Вр╕▒р╣Йр╕Щр╕Хр╕нр╕Щр╕Бр╕▓р╕гр╕кр╣Ир╕Зр╕бр╕нр╕Ъ",
    color: "#795548",
    icon: "ЁЯЫ╡",
    priority: 8
  },
  DELIVERED: {
    label: "р╕кр╣Ир╕Зр╕бр╕нр╕Ър╣Бр╕ер╣Йр╕з",
    description: "р╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕Цр╕╣р╕Бр╕кр╣Ир╕Зр╕бр╕нр╕Ър╣Бр╕ер╣Йр╕з",
    color: "#8BC34A",
    icon: "ЁЯУН",
    priority: 9
  },
  COMPLETED: {
    label: "р╣Ар╕кр╕гр╣Зр╕Ир╕кр╕┤р╣Йр╕Щ",
    description: "р╕Бр╕▓р╕гр╕кр╕▒р╣Ир╕Зр╕Лр╕╖р╣Йр╕нр╣Ар╕кр╕гр╣Зр╕Ир╕кр╕┤р╣Йр╕Щр╕кр╕бр╕Ър╕╣р╕гр╕Ур╣М",
    color: "#4CAF50",
    icon: "ЁЯОЙ",
    priority: 10
  },
  CANCELLED: {
    label: "р╕вр╕Бр╣Ар╕ер╕┤р╕Б",
    description: "р╕Др╕│р╕кр╕▒р╣Ир╕Зр╕Лр╕╖р╣Йр╕нр╕Цр╕╣р╕Бр╕вр╕Бр╣Ар╕ер╕┤р╕Б",
    color: "#F44336",
    icon: "тЭМ",
    priority: 99
  },
  REFUNDED: {
    label: "р╕Др╕╖р╕Щр╣Ар╕Зр╕┤р╕Щр╣Бр╕ер╣Йр╕з",
    description: "р╣Ар╕Зр╕┤р╕Щр╕Цр╕╣р╕Бр╕Др╕╖р╕Щр╣Гр╕лр╣Йр╕Бр╕▒р╕Ър╕ер╕╣р╕Бр╕Др╣Йр╕▓р╣Бр╕ер╣Йр╕з",
    color: "#FF5722",
    icon: "ЁЯТ╕",
    priority: 98
  }
} as const;

// р╕кр╕Цр╕▓р╕Щр╕░р╕Чр╕╡р╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╣Бр╕Ыр╕ер╕Зр╣Др╕Фр╣Йр╕Ир╕▓р╕Бр╕кр╕Цр╕▓р╕Щр╕░р╕Ыр╕▒р╕Ир╕Ир╕╕р╕Ър╕▒р╕Щ
export const STATUS_TRANSITIONS: Record<OrderStatus, OrderStatus[]> = {
  PENDING: [OrderStatus.CONFIRMED, OrderStatus.CANCELLED],
  CONFIRMED: [OrderStatus.PAYMENT_PENDING, OrderStatus.PAID, OrderStatus.PREPARING, OrderStatus.CANCELLED],
  PAYMENT_PENDING: [OrderStatus.PAID, OrderStatus.CANCELLED],
  PAID: [OrderStatus.PREPARING, OrderStatus.CANCELLED],
  PREPARING: [OrderStatus.READY_FOR_PICKUP, OrderStatus.SHIPPED, OrderStatus.CANCELLED],
  READY_FOR_PICKUP: [OrderStatus.COMPLETED, OrderStatus.CANCELLED],
  SHIPPED: [OrderStatus.OUT_FOR_DELIVERY, OrderStatus.DELIVERED],
  OUT_FOR_DELIVERY: [OrderStatus.DELIVERED, OrderStatus.SHIPPED], // р╕нр╕▓р╕Ир╕кр╣Ир╕Зр╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И
  DELIVERED: [OrderStatus.COMPLETED],
  COMPLETED: [], // р╕кр╕Цр╕▓р╕Щр╕░р╕кр╕╕р╕Фр╕Чр╣Йр╕▓р╕в
  CANCELLED: [OrderStatus.REFUNDED],
  REFUNDED: [] // р╕кр╕Цр╕▓р╕Щр╕░р╕кр╕╕р╕Фр╕Чр╣Йр╕▓р╕в
};

// р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓р╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╕кр╕Цр╕▓р╕Щр╕░р╣Др╕Фр╣Йр╕лр╕гр╕╖р╕нр╣Др╕бр╣И
export function canTransitionTo(currentStatus: OrderStatus, newStatus: OrderStatus): boolean {
  const allowedTransitions = STATUS_TRANSITIONS[currentStatus];
  return allowedTransitions.includes(newStatus);
}

// р╕гр╕▒р╕Ър╕кр╕Цр╕▓р╕Щр╕░р╕Цр╕▒р╕Фр╣Др╕Ыр╕Чр╕╡р╣Ир╣Бр╕Щр╕░р╕Щр╕│
export function getNextRecommendedStatus(
  currentStatus: OrderStatus, 
  orderDetails: {
    requiresDeposit: boolean;
    shippingMethod: string;
    paymentType: string;
  }
): OrderStatus | null {
  const { requiresDeposit, shippingMethod, paymentType } = orderDetails;
  
  switch (currentStatus) {
    case OrderStatus.PENDING:
      return OrderStatus.CONFIRMED;
      
    case OrderStatus.CONFIRMED:
      if (requiresDeposit && paymentType === "DEPOSIT_PAYMENT") {
        return OrderStatus.PAYMENT_PENDING;
      }
      return OrderStatus.PAID;
      
    case OrderStatus.PAYMENT_PENDING:
      return OrderStatus.PAID;
      
    case OrderStatus.PAID:
      return OrderStatus.PREPARING;
      
    case OrderStatus.PREPARING:
      return shippingMethod.includes("pickup") || shippingMethod.includes("р╕гр╕▒р╕Ър╕Фр╣Йр╕зр╕вр╕Хр╕▒р╕зр╣Ар╕нр╕З")
        ? OrderStatus.READY_FOR_PICKUP
        : OrderStatus.SHIPPED;
        
    case OrderStatus.READY_FOR_PICKUP:
      return OrderStatus.COMPLETED;
      
    case OrderStatus.SHIPPED:
      return OrderStatus.OUT_FOR_DELIVERY;
      
    case OrderStatus.OUT_FOR_DELIVERY:
      return OrderStatus.DELIVERED;
      
    case OrderStatus.DELIVERED:
      return OrderStatus.COMPLETED;
      
    default:
      return null;
  }
}

// р╕гр╕▒р╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕Цр╕▓р╕Щр╕░
export function getStatusInfo(status: OrderStatus) {
  return ORDER_STATUS_INFO[status];
}

// р╕гр╕▒р╕Ър╕кр╕Цр╕▓р╕Щр╕░р╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Фр╕Чр╕╡р╣Ир╣Ар╕гр╕╡р╕вр╕Зр╕ер╕│р╕Фр╕▒р╕Ъ
export function getAllStatuses(): OrderStatus[] {
  return Object.keys(ORDER_STATUS_INFO).sort((a, b) => {
    const aInfo = ORDER_STATUS_INFO[a as OrderStatus];
    const bInfo = ORDER_STATUS_INFO[b as OrderStatus];
    return aInfo.priority - bInfo.priority;
  }) as OrderStatus[];
}

// р╕гр╕▒р╕Ър╕кр╕Цр╕▓р╕Щр╕░р╕Чр╕╡р╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╣Др╕Фр╣Й
export function getAvailableTransitions(currentStatus: OrderStatus): OrderStatus[] {
  return STATUS_TRANSITIONS[currentStatus] || [];
}

// р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓р╕кр╕Цр╕▓р╕Щр╕░р╣Ар╕Ыр╣Зр╕Щр╕кр╕Цр╕▓р╕Щр╕░р╕кр╕╕р╕Фр╕Чр╣Йр╕▓р╕вр╕лр╕гр╕╖р╕нр╣Др╕бр╣И
export function isFinalStatus(status: OrderStatus): boolean {
  return [OrderStatus.COMPLETED, OrderStatus.REFUNDED].includes(status);
}

// р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓р╕кр╕Цр╕▓р╕Щр╕░р╣Ар╕Ыр╣Зр╕Щр╕кр╕Цр╕▓р╕Щр╕░р╕Чр╕╡р╣Ир╕Цр╕╣р╕Бр╕вр╕Бр╣Ар╕ер╕┤р╕Бр╕лр╕гр╕╖р╕нр╣Др╕бр╣И
export function isCancelledStatus(status: OrderStatus): boolean {
  return [OrderStatus.CANCELLED, OrderStatus.REFUNDED].includes(status);
}

// р╕гр╕▒р╕Ъ progress percentage р╕Вр╕нр╕Зр╕кр╕Цр╕▓р╕Щр╕░
export function getStatusProgress(status: OrderStatus): number {
  const info = ORDER_STATUS_INFO[status];
  if (isCancelledStatus(status)) return 0;
  
  const maxPriority = Math.max(...Object.values(ORDER_STATUS_INFO)
    .filter(s => s.priority < 90) // р╣Др╕бр╣Ир╕Щр╕▒р╕Ър╕кр╕Цр╕▓р╕Щр╕░ cancelled/refunded
    .map(s => s.priority));
    
  return Math.round((info.priority / maxPriority) * 100);
}
