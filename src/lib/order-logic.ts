import { CartItem } from "@/types";

export interface OrderAnalysis {
  hasPets: boolean;
  requiresDeposit: boolean;
  totalAmount: number; // ‚úÖ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏à‡πà‡∏≤‡∏¢‡∏à‡∏£‡∏¥‡∏á (‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î)
  totalAmountBeforeDiscount: number; // ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏î‡∏¥‡∏°‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏±‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î
  depositAmount: number | null;
  remainingAmount: number | null;
  depositRate: number; // ‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡∏Å‡∏≤‡∏£‡∏à‡πà‡∏≤‡∏¢‡∏°‡∏±‡∏î‡∏à‡∏≥ (‡πÄ‡∏ä‡πà‡∏ô 50 ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö 50%)
  paymentType: "FULL_PAYMENT" | "DEPOSIT_PAYMENT";
  suggestedShippingMethod: "pickup" | "delivery";
  petProducts: CartItem[];
  nonPetProducts: CartItem[];
}

export interface DepositSettings {
  minAmount: number;
  percentage: number;
  enabled: boolean;
}

export interface DiscountInfo {
  type: "percentage" | "fixed";
  value: number;
  code?: string;
}

/**
 * ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ ‡∏£‡∏ß‡∏°‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏°‡∏±‡∏î‡∏à‡∏≥‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î
 */
export async function analyzeOrder(
  cartItems: CartItem[],
  discountInfo?: DiscountInfo,
  depositSettings?: DepositSettings
): Promise<OrderAnalysis> {
  // ‡πÅ‡∏¢‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
  const petProducts = cartItems.filter((item) =>
    isPetProduct(item.product.category)
  );

  const nonPetProducts = cartItems.filter(
    (item) => !isPetProduct(item.product.category)
  );

  const hasPets = petProducts.length > 0;

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î (‡πÉ‡∏´‡πâ‡∏™‡∏≠‡∏î‡∏Ñ‡∏•‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö UI: ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö salePrice ‡πÅ‡∏•‡∏∞ discountPercent)
  const originalAmount = cartItems.reduce((total, item) => {
    const basePrice = item.product.price;
    const hasSalePrice = item.product.salePrice != null;
    const hasDiscountPercent =
      !hasSalePrice && item.product.discountPercent != null && (item.product.discountPercent as number) > 0;

    const unitPrice = hasSalePrice
      ? (item.product.salePrice as number)
      : hasDiscountPercent
      ? Math.max(0, basePrice - basePrice * ((item.product.discountPercent as number) / 100))
      : basePrice;

    return total + unitPrice * item.quantity;
  }, 0);

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î
  let discountAmount = 0;
  if (discountInfo) {
    if (discountInfo.type === "percentage") {
      discountAmount = (originalAmount * discountInfo.value) / 100;
    } else if (discountInfo.type === "fixed") {
      discountAmount = discountInfo.value;
    }
  }

  // ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î (‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏à‡πà‡∏≤‡∏¢‡∏à‡∏£‡∏¥‡∏á)
  const finalAmount = Math.max(0, originalAmount - discountAmount);

  // Debug logging
  if (discountInfo) {
    console.log("üí∞ Order Logic Debug:");
    console.log("  Original Amount:", originalAmount);
    console.log("  Discount Info:", discountInfo);
    console.log("  Calculated Discount Amount:", discountAmount);
    console.log("  Final Amount:", finalAmount);
  }

  // ‡∏î‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ deposit ‡∏à‡∏≤‡∏Å parameter ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤ default
  const settings = depositSettings || {
    minAmount: 10000,
    percentage: 0.1,
    enabled: true
  };

  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô - ‡πÉ‡∏ä‡πâ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å parameter
  let requiresDeposit = false;
  let depositAmount: number | null = null;
  let remainingAmount: number | null = null;
  let paymentType: "FULL_PAYMENT" | "DEPOSIT_PAYMENT" = "FULL_PAYMENT";

  // ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç: ‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏Å‡∏¥‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏ô settings ‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞‡∏°‡∏±‡∏î‡∏à‡∏≥‡∏ï‡∏≤‡∏°‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
  if (hasPets && settings.enabled && finalAmount > settings.minAmount) {
    requiresDeposit = true;
    depositAmount = Math.round(finalAmount * settings.percentage * 100) / 100; // rounded to 2 decimal places
    remainingAmount = Math.round((finalAmount - depositAmount) * 100) / 100;
    paymentType = "DEPOSIT_PAYMENT";
  }

  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á
  const suggestedShippingMethod: "pickup" | "delivery" = hasPets
    ? "pickup"
    : "delivery";

  return {
    hasPets,
    requiresDeposit,
    totalAmount: finalAmount, // ‚úÖ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏à‡πà‡∏≤‡∏¢‡∏à‡∏£‡∏¥‡∏á (‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î)
    totalAmountBeforeDiscount: originalAmount, // ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏î‡∏¥‡∏°‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏±‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î
    depositAmount,
    remainingAmount,
    depositRate: Math.round(settings.percentage * 100), // ‡πÅ‡∏õ‡∏•‡∏á‡∏à‡∏≤‡∏Å 0.1 ‡πÄ‡∏õ‡πá‡∏ô 10%
    paymentType,
    suggestedShippingMethod,
    petProducts,
    nonPetProducts,
  };
}

/**
 * ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÅ‡∏ö‡∏ö server-side (‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô API routes)
 */
export async function analyzeOrderWithDatabase(
  cartItems: CartItem[],
  discountInfo?: DiscountInfo
): Promise<OrderAnalysis> {
  // Import ‡πÅ‡∏ö‡∏ö dynamic ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î PrismaClient ‡πÉ‡∏ô browser
  const { getDepositSettings } = await import("./system-settings");
  const depositSettings = await getDepositSettings();
  
  return analyzeOrder(cartItems, discountInfo, depositSettings);
}

/**
 * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
 */
export function isPetProduct(category: string): boolean {
  const petCategories = [
    "dogs", "cats", "birds", "fish", "rabbits", "hamsters", "reptiles", "small-pets",
    "‡∏™‡∏∏‡∏ô‡∏±‡∏Ç", "‡πÅ‡∏°‡∏ß", "‡∏ô‡∏Å", "‡∏õ‡∏•‡∏≤", "‡∏Å‡∏£‡∏∞‡∏ï‡πà‡∏≤‡∏¢", "‡πÅ‡∏Æ‡∏°‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå", "‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏∑‡πâ‡∏≠‡∏¢‡∏Ñ‡∏•‡∏≤‡∏ô", "‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡πá‡∏Å"
  ];
  return petCategories.some((petCat) =>
    category.toLowerCase().includes(petCat.toLowerCase())
  );
}

/**
 * ‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
 * - ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á: ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞ "‡∏ó‡∏≤‡∏á‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏à‡∏±‡∏î‡∏™‡πà‡∏á"
 * - ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á: ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞ "‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô"
 */
export function filterShippingOptions(
  shippingOptions: any[],
  orderAnalysis: OrderAnalysis
) {
  return shippingOptions.filter((option) => {
    // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á (‡∏ó‡∏≤‡∏á‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏à‡∏±‡∏î‡∏™‡πà‡∏á)
    if (orderAnalysis.hasPets) {
      return option.method === "pickup" && option.forPetsOnly === true;
    }

    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô
    return option.method === "delivery" && option.forPetsOnly === false;
  });
}

/**
 * ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞ (‡∏£‡∏ß‡∏°‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡πÅ‡∏•‡πâ‡∏ß)
 */
export function calculatePaymentAmount(
  orderAnalysis: OrderAnalysis,
  shippingFee: number = 0,
  shippingDiscount: number = 0
): number {
  const baseAmount = orderAnalysis.requiresDeposit
    ? orderAnalysis.depositAmount || 0
    : orderAnalysis.totalAmount; // ‚úÖ ‡πÉ‡∏ä‡πâ totalAmount ‡πÉ‡∏´‡∏°‡πà (‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡πÅ‡∏•‡πâ‡∏ß)

  return baseAmount + shippingFee - shippingDiscount;
}

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
 */
export function getPaymentDescription(orderAnalysis: OrderAnalysis): string {
  if (orderAnalysis.requiresDeposit) {
    return (
      `‡∏ä‡∏≥‡∏£‡∏∞‡∏°‡∏±‡∏î‡∏à‡∏≥ ${orderAnalysis.depositAmount?.toLocaleString()} ‡∏ö‡∏≤‡∏ó (10%) ` +
      `‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ${orderAnalysis.remainingAmount?.toLocaleString()} ‡∏ö‡∏≤‡∏ó ` +
      `‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á`
    );
  }

  return `‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏ï‡πá‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ${orderAnalysis.totalAmount.toLocaleString()} ‡∏ö‡∏≤‡∏ó`;
}

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á
 */
export function getShippingDescription(orderAnalysis: OrderAnalysis): string {
  if (orderAnalysis.hasPets) {
    return (
      "‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏°‡∏µ‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡∏ó‡∏≤‡∏á‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á " +
      "‡∏ï‡∏≤‡∏°‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏Ç‡∏≠‡∏á‡∏ô‡πâ‡∏≠‡∏á‡πÜ"
    );
  }

  return "‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 1-2 ‡∏ß‡∏±‡∏ô‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ";
}
